--- a/target/linux/ar71xx/base-files/etc/uci-defaults/01_leds
+++ b/target/linux/ar71xx/base-files/etc/uci-defaults/01_leds
@@ -184,7 +184,9 @@ dlan-pro-1200-ac)
 gl-ar150)
 	ucidef_set_led_wlan "wlan" "WLAN" "gl_ar150:wlan" "phy0tpt"
 	;;
-
+gl-usb150)
+	ucidef_set_led_wlan "wlan" "WLAN" "gl-usb150:wlan" "phy0tpt"
+	;;
 gl-ar300m)
 	ucidef_set_led_wlan "wlan" "WLAN" "gl-ar300m:wlan" "phy0tpt"
 	;;
--- a/target/linux/ar71xx/base-files/etc/uci-defaults/02_network
+++ b/target/linux/ar71xx/base-files/etc/uci-defaults/02_network
@@ -331,6 +331,7 @@ cap4200ag |\
 eap300v2 |\
 eap7660d |\
 el-mini |\
+gl-usb150 |\
 loco-m-xw |\
 mr600 |\
 mr600v2 |\
--- a/target/linux/ar71xx/base-files/lib/ar71xx.sh
+++ b/target/linux/ar71xx/base-files/lib/ar71xx.sh
@@ -470,6 +470,9 @@ ar71xx_board_detect() {
 	*"GL-MIFI")
         name="gl-mifi"
         ;;
+	*"GL-USB150")
+		name="gl-usb150"
+		;;
 	*"EnGenius EPG5000")
 		name="epg5000"
 		;;
--- a/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
+++ b/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
@@ -251,6 +251,7 @@ platform_check_image() {
 	gl-ar300 | \
 	gl-ar300m | \
 	gl-domino | \
+	gl-usb150 | \
 	epg5000 | \
 	esr1750 | \
 	esr900 | \
--- a/target/linux/ar71xx/config-3.18
+++ b/target/linux/ar71xx/config-3.18
@@ -74,6 +74,7 @@ CONFIG_ATH79_MACH_GL_AR300=y
 CONFIG_ATH79_MACH_GL_AR300M=y
 CONFIG_ATH79_MACH_GL_DOMINO=y
 CONFIG_ATH79_MACH_GL_INET=y
+CONFIG_ATH79_MACH_GL_USB150=y
 CONFIG_ATH79_MACH_GS_MINIBOX_V1=y
 CONFIG_ATH79_MACH_GS_OOLITE=y
 CONFIG_ATH79_MACH_HIWIFI_HC6361=y
--- /dev/null
+++ b/target/linux/ar71xx/files/arch/mips/ath79/mach-gl-usb150.c
@@ -0,0 +1,101 @@
+/*
+ *  GL USB nano router support
+ *
+ *  Copyright (C) 2011 dongyuqi <729650915@qq.com>
+ *  Copyright (C) 2011-2012 Gabor Juhos <juhosg@openwrt.org>
+ *  Copyright (C) 2013 alzhao <alzhao@gmail.com>
+ *  Copyright (C) 2014 Michel Stempin <michel.stempin@wanadoo.fr>
+ *
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License version 2 as published
+ *  by the Free Software Foundation.
+*/
+
+#include <linux/gpio.h>
+
+#include <asm/mach-ath79/ath79.h>
+
+#include "dev-eth.h"
+#include "dev-gpio-buttons.h"
+#include "dev-leds-gpio.h"
+#include "dev-m25p80.h"
+#include "dev-usb.h"
+#include "dev-wmac.h"
+#include "machtypes.h"
+
+#define GL_USB_GPIO_LED_WLAN	   0
+#define GL_USB_GPIO_LED_LAN		   13
+#define GL_USB_GPIO_LAN_RESET	7
+
+#define GL_USB_GPIO_BTN_RESET	   11
+
+#define GL_USB_KEYS_POLL_INTERVAL   20	/* msecs */
+#define GL_USB_KEYS_DEBOUNCE_INTERVAL	(3 * GL_USB_KEYS_POLL_INTERVAL)
+
+#define GL_USB_MAC0_OFFSET	0x0000
+#define GL_USB_CALDATA_OFFSET	0x1000
+#define GL_USB_WMAC_MAC_OFFSET	0x0000
+
+static struct gpio_led gl_usb_leds_gpio[] __initdata = {
+	{
+		.name = "gl-usb150:wlan",
+		.gpio = GL_USB_GPIO_LED_WLAN,
+		.active_low = 0,
+	},
+	{
+		.name = "gl-usb150:pow",
+		.gpio = GL_USB_GPIO_LED_LAN,
+		.active_low = 0,
+		.default_state = 1,
+	},
+	{
+	    .name = "gl-usb150:resetlan",
+		.gpio = GL_USB_GPIO_LAN_RESET,
+		.active_low = 0,
+		.default_state = 0,
+	},
+};
+
+static struct gpio_keys_button gl_usb_gpio_keys[] __initdata = {
+	{
+		.desc = "reset",
+		.type = EV_KEY,
+		.code = KEY_RESTART,
+		.debounce_interval = GL_USB_KEYS_DEBOUNCE_INTERVAL,
+		.gpio = GL_USB_GPIO_BTN_RESET,
+		.active_low = 0,
+	},
+};
+
+static void __init gl_usb_setup(void)
+{
+
+	/* ART base address */
+	u8 *art = (u8 *) KSEG1ADDR(0x1fff0000);
+
+	/* disable PHY_SWAP and PHY_ADDR_SWAP bits */
+	ath79_setup_ar933x_phy4_switch(false, false);
+
+	/* register flash. */
+	ath79_register_m25p80(NULL);
+
+	/* register gpio LEDs and keys */
+	ath79_register_leds_gpio(-1, ARRAY_SIZE(gl_usb_leds_gpio),
+				 gl_usb_leds_gpio);
+	ath79_register_gpio_keys_polled(-1, GL_USB_KEYS_POLL_INTERVAL,
+					ARRAY_SIZE(gl_usb_gpio_keys),
+					gl_usb_gpio_keys);
+
+	/* enable usb */
+	ath79_register_usb();
+
+	/* register eth0 as WAN, eth1 as LAN */
+	ath79_init_mac(ath79_eth0_data.mac_addr, art+GL_USB_MAC0_OFFSET, 0);
+	ath79_register_mdio(0, 0x0);
+	ath79_register_eth(0);
+
+	/* register wireless mac with cal data */
+	ath79_register_wmac(art + GL_USB_CALDATA_OFFSET, art + GL_USB_WMAC_MAC_OFFSET);
+}
+
+MIPS_MACHINE(ATH79_MACH_GL_USB150, "GL-USB150", "GL-USB150",gl_usb_setup);
--- a/target/linux/ar71xx/generic/profiles/gli.mk
+++ b/target/linux/ar71xx/generic/profiles/gli.mk
@@ -50,7 +50,7 @@ $(eval $(call Profile,DOMINO))
 
 define Profile/GL-MIFI
 	NAME:=GL-MIFI
-	PACKAGES:=kmod-usb-core kmod-usb2
+	PACKAGES:=kmod-usb-core kmod-usb2 kmod-usb-net
 endef
 define Profile/GL-MIFI/Description
 	Configuration of GL-MIFI.
@@ -66,3 +66,15 @@ define Profile/GL-AR300M/description
 	Package set optimized for the GL-AR300M.
 endef
 $(eval $(call Profile,GL-AR300M))
+
+define Profile/GL-USB150
+	NAME:=GL-USB150
+	PACKAGES:=kmod-usb-core kmod-usb2 kmod-ledtrig-gpio
+endef
+
+define Profile/GL-USB150/Description
+	Configuration of GL USB150 nano router
+endef
+
+$(eval $(call Profile,GL-USB150))
+
--- a/target/linux/ar71xx/image/Makefile
+++ b/target/linux/ar71xx/image/Makefile
@@ -152,6 +152,14 @@ define Device/gl-ar150
 endef
 TARGET_DEVICES += gl-ar150
 
+define Device/gl-usb150
+  BOARDNAME = GL-USB150
+  IMAGE_SIZE = 16000k
+  CONSOLE = ttyATH0,115200
+  MTDPARTS = spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,16000k(firmware),64k(art)ro
+endef
+TARGET_DEVICES += gl-usb150
+
 define Device/gl-mifi
   BOARDNAME = GL-MIFI
   IMAGE_SIZE = 16000k
--- /dev/null
+++ b/target/linux/ar71xx/patches-3.18/919-MIPS-ath79-add-gl_usb-support.patch
@@ -0,0 +1,39 @@
+--- a/arch/mips/ath79/Kconfig
++++ b/arch/mips/ath79/Kconfig
+@@ -543,6 +543,16 @@ config ATH79_MACH_GL_AR150
+    select ATH79_DEV_USB
+    select ATH79_DEV_WMAC
+ 
++config ATH79_MACH_GL_USB150
++   bool "GL USB nano router support"
++   select SOC_AR933X
++   select ATH79_DEV_ETH
++   select ATH79_DEV_GPIO_BUTTONS
++   select ATH79_DEV_LEDS_GPIO
++   select ATH79_DEV_M25P80
++   select ATH79_DEV_USB
++   select ATH79_DEV_WMAC
++
+ config ATH79_MACH_GL_MIFI
+ 	bool "GL MIFI support"
+ 	select SOC_AR933X
+--- a/arch/mips/ath79/Makefile
++++ b/arch/mips/ath79/Makefile
+@@ -79,6 +79,7 @@ obj-$(CONFIG_ATH79_MACH_EPG5000)	+= mach
+ obj-$(CONFIG_ATH79_MACH_ESR1750)	+= mach-esr1750.o
+ obj-$(CONFIG_ATH79_MACH_F9K1115V2)	+= mach-f9k1115v2.o
+ obj-$(CONFIG_ATH79_MACH_GL_AR150)	+= mach-gl-ar150.o
++obj-$(CONFIG_ATH79_MACH_GL_USB150)       += mach-gl-usb150.o
+ obj-$(CONFIG_ATH79_MACH_GL_MIFI)	+= mach-gl-mifi.o
+ obj-$(CONFIG_ATH79_MACH_GL_AR300)	+= mach-gl-ar300.o
+ obj-$(CONFIG_ATH79_MACH_GL_AR300M)    += mach-gl-ar300m.o
+--- a/arch/mips/ath79/machtypes.h
++++ b/arch/mips/ath79/machtypes.h
+@@ -68,6 +68,7 @@ enum ath79_mach_type {
+ 	ATH79_MACH_EPG5000,		/* EnGenius EPG5000 */
+ 	ATH79_MACH_F9K1115V2,		/* Belkin AC1750DB */
+ 	ATH79_MACH_GL_AR150,	/* GL-AR150 support */
++	ATH79_MACH_GL_USB150,	/* GL-USB150 nano router support */
+ 	ATH79_MACH_GL_MIFI,	    /* GL-MIFI support */
+ 	ATH79_MACH_GL_AR300,		/* GL-AR300 */
+ 	ATH79_MACH_GL_AR300M,		/* GL-AR300M */
